/*
 * LunarTunerGui.java
 *
 * Created on August 26, 2007, 9:03 PM
 */

package gui;

/**
 *
 * @author  mcallen
 */
public class LunarTunerGui extends javax.swing.JFrame {
    
    /** Creates new form LunarTunerGui */
    public LunarTunerGui() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        panel_status = new javax.swing.JPanel();
        label_noteHeard = new javax.swing.JLabel();
        textField_noteHeard = new javax.swing.JTextField();
        label_instructions = new javax.swing.JLabel();
        textField_instructions = new javax.swing.JTextField();
        panel_instrument = new javax.swing.JPanel();
        label_instrumentName = new javax.swing.JLabel();
        comboBox_instrumentName = new javax.swing.JComboBox();
        label_instrumentNote = new javax.swing.JLabel();
        comboBox_instrumentNote = new javax.swing.JComboBox();
        button_playNote = new javax.swing.JButton();
        panel_notifySettings = new javax.swing.JPanel();
        checkBox_intervalNotify = new javax.swing.JCheckBox();
        label_intervalInSeconds = new javax.swing.JLabel();
        spinner_intervalNotifyTime = new javax.swing.JSpinner();
        label_meterGraphic = new javax.swing.JLabel();
        menu_mainMenuBar = new javax.swing.JMenuBar();
        menu_fileMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LunarTuner Version 0.1");
        setResizable(false);
        panel_status.setBorder(javax.swing.BorderFactory.createTitledBorder("Status"));
        label_noteHeard.setText("Note Heard:");

        textField_noteHeard.setMinimumSize(null);

        label_instructions.setText("Instructions:");

        textField_instructions.setMinimumSize(null);

        org.jdesktop.layout.GroupLayout panel_statusLayout = new org.jdesktop.layout.GroupLayout(panel_status);
        panel_status.setLayout(panel_statusLayout);
        panel_statusLayout.setHorizontalGroup(
            panel_statusLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel_statusLayout.createSequentialGroup()
                .addContainerGap()
                .add(panel_statusLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(textField_noteHeard, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                    .add(label_noteHeard)
                    .add(label_instructions)
                    .add(textField_instructions, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel_statusLayout.setVerticalGroup(
            panel_statusLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel_statusLayout.createSequentialGroup()
                .add(label_noteHeard)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(textField_noteHeard, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(label_instructions)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(textField_instructions, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel_instrument.setBorder(javax.swing.BorderFactory.createTitledBorder("Instrument"));
        label_instrumentName.setText("Name:");

        comboBox_instrumentName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBox_instrumentName.setMinimumSize(null);
        comboBox_instrumentName.getAccessibleContext().setAccessibleName("Instrument Name");

        label_instrumentNote.setText("Note:");

        comboBox_instrumentNote.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        button_playNote.setText("Play Note");

        org.jdesktop.layout.GroupLayout panel_instrumentLayout = new org.jdesktop.layout.GroupLayout(panel_instrument);
        panel_instrument.setLayout(panel_instrumentLayout);
        panel_instrumentLayout.setHorizontalGroup(
            panel_instrumentLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel_instrumentLayout.createSequentialGroup()
                .addContainerGap()
                .add(panel_instrumentLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(button_playNote, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                    .add(panel_instrumentLayout.createSequentialGroup()
                        .add(panel_instrumentLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(label_instrumentName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(label_instrumentNote))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(panel_instrumentLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(comboBox_instrumentName, 0, 153, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, comboBox_instrumentNote, 0, 153, Short.MAX_VALUE))))
                .addContainerGap())
        );
        panel_instrumentLayout.setVerticalGroup(
            panel_instrumentLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel_instrumentLayout.createSequentialGroup()
                .add(panel_instrumentLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(label_instrumentName)
                    .add(comboBox_instrumentName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(14, 14, 14)
                .add(panel_instrumentLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(label_instrumentNote)
                    .add(comboBox_instrumentNote, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 15, Short.MAX_VALUE)
                .add(button_playNote)
                .addContainerGap())
        );

        panel_notifySettings.setBorder(javax.swing.BorderFactory.createTitledBorder("Notify Settings"));
        checkBox_intervalNotify.setText("Enable Interval Notify");
        checkBox_intervalNotify.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        checkBox_intervalNotify.setMargin(new java.awt.Insets(0, 0, 0, 0));

        label_intervalInSeconds.setText("Interval in Seconds");

        org.jdesktop.layout.GroupLayout panel_notifySettingsLayout = new org.jdesktop.layout.GroupLayout(panel_notifySettings);
        panel_notifySettings.setLayout(panel_notifySettingsLayout);
        panel_notifySettingsLayout.setHorizontalGroup(
            panel_notifySettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel_notifySettingsLayout.createSequentialGroup()
                .addContainerGap()
                .add(panel_notifySettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(panel_notifySettingsLayout.createSequentialGroup()
                        .add(label_intervalInSeconds)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(spinner_intervalNotifyTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(checkBox_intervalNotify))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        panel_notifySettingsLayout.setVerticalGroup(
            panel_notifySettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel_notifySettingsLayout.createSequentialGroup()
                .add(8, 8, 8)
                .add(checkBox_intervalNotify)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panel_notifySettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(spinner_intervalNotifyTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(label_intervalInSeconds))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        label_meterGraphic.setIcon(new javax.swing.ImageIcon("resource\\meter.gif"));

        menu_fileMenu.setText("File");
        menu_mainMenuBar.add(menu_fileMenu);

        setJMenuBar(menu_mainMenuBar);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(label_meterGraphic, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(10, 10, 10)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, panel_status, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(panel_notifySettings, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, panel_instrument, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, label_meterGraphic, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(panel_status, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(panel_instrument, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(panel_notifySettings, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LunarTunerGui().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_playNote;
    private javax.swing.JCheckBox checkBox_intervalNotify;
    private javax.swing.JComboBox comboBox_instrumentName;
    private javax.swing.JComboBox comboBox_instrumentNote;
    private javax.swing.JLabel label_instructions;
    private javax.swing.JLabel label_instrumentName;
    private javax.swing.JLabel label_instrumentNote;
    private javax.swing.JLabel label_intervalInSeconds;
    private javax.swing.JLabel label_meterGraphic;
    private javax.swing.JLabel label_noteHeard;
    private javax.swing.JMenu menu_fileMenu;
    private javax.swing.JMenuBar menu_mainMenuBar;
    private javax.swing.JPanel panel_instrument;
    private javax.swing.JPanel panel_notifySettings;
    private javax.swing.JPanel panel_status;
    private javax.swing.JSpinner spinner_intervalNotifyTime;
    private javax.swing.JTextField textField_instructions;
    private javax.swing.JTextField textField_noteHeard;
    // End of variables declaration//GEN-END:variables
    
    public void setInstructions(String instructions) {
        textField_instructions.setText(instructions);
    }
    
    public void setNoteHeard(String noteHeard) {
        textField_noteHeard.setText(noteHeard);
    }
 
    public void addInstrument(String instrument) {
        comboBox_instrumentName.addItem(instrument);
    }

    public void resetNotes() {
        comboBox_instrumentNote.removeAllItems();
    }
    
    public void addNote(String note) {
        comboBox_instrumentNote.addItem(note);
    }

    
}
